{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js!/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/components/Chat.vue","mtime":1591997511169},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport io from \"socket.io-client\";\nvar socket = io.connect(\"https://hellen-fitness-api.herokuapp.com\");\nexport default {\n  data: function data() {\n    return {\n      username: '',\n      message: '',\n      messages: []\n    };\n  },\n  methods: {\n    send: function send(e) {\n      e.preventDefault();\n      socket.emit('chat-message', {\n        message: this.message,\n        user: this.username\n      });\n      this.messages.push({\n        message: this.message,\n        by: this.username\n      });\n      this.message = null;\n    },\n    clearChat: function clearChat() {\n      socket.emit('clear-chat');\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.username = localStorage.getItem('username');\n    socket.on('previous-message', function (messages) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = messages[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var message = _step.value;\n\n          _this.messages.push({\n            message: message.message,\n            by: message.user\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    });\n    socket.on('chat-message', function (data) {\n      _this.messages.push({\n        message: data.message,\n        by: data.user\n      });\n\n      _this.typing = false;\n    }); // socket.on('previous-message', (data) => {\n    //     this.messages.push(data);\n    // })\n  }\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,EAAA,MAAA,kBAAA;AACA,IAAA,MAAA,GAAA,EAAA,CAAA,OAAA,CAAA,0CAAA,CAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,CADA,EACA;AACA,MAAA,CAAA,CAAA,cAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,cAAA,EAAA;AACA,QAAA,OAAA,EAAA,KAAA,OADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA;AAIA,WAAA,QAAA,CAAA,IAAA,CAAA;AAAA,QAAA,OAAA,EAAA,KAAA,OAAA;AAAA,QAAA,EAAA,EAAA,KAAA;AAAA,OAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KATA;AAWA,IAAA,SAXA,uBAWA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,YAAA;AACA;AAbA,GAVA;AA0BA,EAAA,OA1BA,qBA0BA;AAAA;;AACA,SAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAEA,IAAA,MAAA,CAAA,EAAA,CAAA,kBAAA,EAAA,UAAA,QAAA,EAAA;AAAA;AAAA;AAAA;;AAAA;AACA,6BAAA,QAAA,8HAAA;AAAA,cAAA,OAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,YAAA,OAAA,EAAA,OAAA,CAAA,OAAA;AAAA,YAAA,EAAA,EAAA,OAAA,CAAA;AAAA,WAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KAJA;AAMA,IAAA,MAAA,CAAA,EAAA,CAAA,cAAA,EAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,QAAA,OAAA,EAAA,IAAA,CAAA,OAAA;AAAA,QAAA,EAAA,EAAA,IAAA,CAAA;AAAA,OAAA;;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,KAAA;AACA,KAHA,EATA,CAgBA;AACA;AACA;AACA;AA7CA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"messages\" >\n            <div class=\"message\" v-for=\"message of messages\" :key=\"message.id\">\n                <strong>{{ message.by + ': ' }}</strong> {{ message.message }}\n            </div>   \n        </div>\n        <form id=\"chat\" >\n            <input type=\"hidden\" name=\"username\" v-model=\"username\">\n            <input type=\"text\" name=\"message\" placeholder=\"Digite sua mensagem\" v-model=\"message\" autocomplete=\"off\">\n            <button type=\"submit\" @click=\"send\">Enviar</button>\n        </form>     \n        <br>\n        <span class=\"btn btn-danger\" v-if=\"username == 'Hellen Fitness'\" @click=\"clearChat\">Limpar chat</span>\n    </div>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nlet socket = io.connect(\"https://hellen-fitness-api.herokuapp.com\");\n\nexport default {\n    data()  {\n        return {\n            username: '',\n            message: '',\n            messages: [],\n        }\n    },\n               \n            \n    methods: {\n        send(e) {\n            e.preventDefault();\n            socket.emit('chat-message', { \n                message: this.message, \n                user: this.username })\n            \n            this.messages.push({ message: this.message, by: this.username });\n            this.message = null\n        },\n\n        clearChat() {\n            socket.emit('clear-chat');\n        }\n    },\n\n    created() {\n        this.username = localStorage.getItem('username');\n\n        socket.on('previous-message', (messages) => {\n            for (const message of messages) {\n                 this.messages.push({ message: message.message, by: message.user })\n            }\n        })\n\n        socket.on('chat-message', (data) => {\n            this.messages.push({ message: data.message, by: data.user })\n            this.typing = false\n        });\n\n        \n\n        // socket.on('previous-message', (data) => {\n        //     this.messages.push(data);\n        // })\n    }\n}\n</script>\n\n<style scoped>\n.message { \n    padding: 5px;\n    text-align: left;\n}\n\n\nhtml, body {\n  height: 100%;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#chat {\n  height: 100%;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  flex-direction: column;\n}\n\ninput {\n  width: 600px;\n  border: 1px solid #ddd;\n  height: 50px;\n  padding: 0 20px;\n  font-size: 14px;\n}\n\nbutton {\n  width: 600px;\n  height: 50px;\n  font-size: 14px;\n  background: #069;\n  text-align: center;\n  line-height: 50px;\n  font-weight: bold;\n  color: #FFF;\n  margin-top: 10px;\n}\n\n.messages {\n  width: 600px;\n  height: 250px;\n  margin: 20px auto;\n  border: 1px solid #ddd;\n  padding: 20px;\n  overflow: scroll;\n  overflow-x: hidden;\n}\n</style>"],"sourceRoot":"src/components"}]}