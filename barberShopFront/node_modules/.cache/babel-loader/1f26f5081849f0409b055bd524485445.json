{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js!/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/views/Client.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/views/Client.vue","mtime":1592506403276},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/Documents/barberShopFront/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"../services/api\";\nexport default {\n  data: function data() {\n    return {\n      name: '',\n      email: '',\n      phone: '',\n      errors: []\n    };\n  },\n  methods: {\n    checkForm: function checkForm() {\n      this.errors['email'] = !this.email || !this.validEmail(this.email) ? true : false;\n      this.errors['name'] = !this.name ? true : false;\n      this.errors['phone'] = !this.validPhhone(this.phone) ? true : false;\n    },\n    validEmail: function validEmail(email) {\n      var isValid = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return isValid.test(email);\n    },\n    validPhhone: function validPhhone(phone) {\n      var isValid = /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/;\n      return isValid.test(phone);\n    },\n    addClient: function () {\n      var _addClient = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var client;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                client = {\n                  name: this.name,\n                  email: this.email,\n                  phone: this.phone\n                };\n\n                if (!(this.errors['email'] == false && this.errors['name'] == false && this.errors['phone'] == false)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return api.post('client', client).then(function (res) {\n                  return console.log(res.data.msg);\n                }) //this.response = res.data)\n                .catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addClient(_x) {\n        return _addClient.apply(this, arguments);\n      }\n\n      return addClient;\n    }()\n  }\n};",{"version":3,"sources":["Client.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,GAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAMA,GARA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,MAAA,CAAA,OAAA,IAAA,CAAA,KAAA,KAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,MAAA,IAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,OAAA,IAAA,CAAA,KAAA,WAAA,CAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,KALA;AAOA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,OAAA,GAAA,yJAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAVA;AAYA,IAAA,WAAA,EAAA,qBAAA,KAAA,EAAA;AACA,UAAA,OAAA,GAAA,sFAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,KAfA;AAiBA,IAAA,SAjBA;AAAA;AAAA;AAAA,+CAiBA,CAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,gBAAA,CAAA,CAAA,cAAA;AACA,gBAAA,MAnBA,GAmBA;AACA,kBAAA,IAAA,EAAA,KAAA,IADA;AAEA,kBAAA,KAAA,EAAA,KAAA,KAFA;AAGA,kBAAA,KAAA,EAAA,KAAA;AAHA,iBAnBA;;AAAA,sBAyBA,KAAA,MAAA,CAAA,OAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,MAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,OAAA,KAAA,KAzBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA0BA,GAAA,CAAA,IAAA,CAAA,QAAA,EAAA,MAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AAAA,iBADA,EACA;AADA,iBAEA,KAFA,CAEA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAFA,CA1BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAVA,CAAA","sourcesContent":["<template>\n    <div id=\"client\">\n       <h3>Cadastrar Cliente</h3>\n\n       <div class=\"client-form\">\n           <form action=\"\">\n               <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"name\" placeholder=\"Nome do Cliente\" v-model=\"name\" v-on:keyup=\"checkForm\">\n                </div>\n\n               <div class=\"form-group\">\n                    <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"E-mail do Cliente\" v-model=\"email\" v-on:keyup=\"checkForm\">\n                </div>\n\n                <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"phone\" placeholder=\"Telefone do Cliente\" v-model=\"phone\" mask=\"+55 (##) #####-####\" v-on:keyup=\"checkForm\">\n                </div>\n               \n                <div v-if=\"errors['name'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Insira o nome do cliente<br></span>\n                </div> \n\n                <div v-if=\"errors['email'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Insira um E-mail válido<br></span>\n                </div> \n\n\n                <div v-if=\"errors['phone'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Insira um telefone válido<br></span>\n                </div> \n\n\n                <button @click=\"addClient\" class=\"btn btn-dark\">Cadastrar</button>\n           </form>\n       </div>\n       \n    </div>\n</template>\n\n\n<script>\nimport api from '../services/api'\nexport default {\n    data() {\n        return {\n            name: '',\n            email: '',\n            phone: '',\n            errors: [],\n        }\n    },\n\n    methods: {\n        checkForm() {     \n            this.errors['email'] = !this.email || !this.validEmail(this.email) ? true : false;\n            this.errors['name'] = !this.name ? true : false;\n            this.errors['phone'] = !this.validPhhone(this.phone) ? true : false;    \n        },\n\n        validEmail: (email) => {\n            let isValid = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return isValid.test(email);\n        },\n\n        validPhhone: (phone) => {\n            let isValid = /^(?:(?:\\+|00)?(55)\\s?)?(?:\\(?([1-9][0-9])\\)?\\s?)?(?:((?:9\\d|[2-9])\\d{3})\\-?(\\d{4}))$/;\n            return isValid.test(phone);\n        }, \n            \n        async addClient(e) {\n            e.preventDefault();\n            const client = {\n                name: this.name,\n                email: this.email,\n                phone: this.phone\n            }\n\n            if(this.errors['email'] == false && this.errors['name'] == false && this.errors['phone'] == false) {\n                await api.post('client', client)\n                .then(res => console.log(res.data.msg)) //this.response = res.data)\n                .catch(err => console.log(err));  \n\n                \n            }\n       }\n    }   \n}\n</script>\n\n\n<style scoped>\n    *{\n        margin-top: 25px;\n        font-family: 'Roboto300', sans-serif;\n    }\n\n    #client {\n        margin: 150px auto;\n    }\n   \n    .client-form {\n        margin: 20px auto;\n        max-width: 500px;\n        width: 95%;\n        height: 400;\n        color: #ffff;\n        padding: 10px;\n        font-family: cursive;\n        border-radius: 15px;\n        cursor: pointer;\n\n    }\n\n</style>"],"sourceRoot":"src/views"}]}