{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js!/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/views/Service.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/views/Service.vue","mtime":1592432357789},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/Documents/barberShopFront/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"../services/api\";\nimport Datepicker from 'vuejs-datepicker';\nimport moment from 'moment';\nexport default {\n  components: {\n    Datepicker: Datepicker\n  },\n  data: function data() {\n    return {\n      clients: [],\n      clientId: 'Nome do Cliente...',\n      serviceType: '',\n      errors: [],\n      date: new Date(),\n      time: '',\n      response: ''\n    };\n  },\n  methods: {\n    checkForm: function checkForm() {\n      this.errors['client-id'] = !this.clientId || this.clientId == 'Nome do Cliente...' ? true : false;\n      this.errors['time'] = !this.time ? true : false;\n      this.errors['service-type'] = !this.serviceType ? true : false;\n    },\n    addService: function () {\n      var _addService = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var _this = this;\n\n        var service;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                service = {\n                  employee_id: 10,\n                  //this.employeeId,\n                  client_id: this.clientId,\n                  scheduled_date: moment(this.date).format('YYYY-MM-DD'),\n                  scheduled_hour: this.time,\n                  service_type: this.serviceType\n                };\n\n                if (!(this.errors['client-id'] == false && this.errors['time'] == false && this.errors['service-type'] == false)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return api.post('service', service).then(function (res) {\n                  return _this.response = res.data;\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 5:\n                if (this.response.service) {\n                  this.response = true;\n                  setTimeout(function () {\n                    window.location = reload();\n                  }, 2000);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addService(_x) {\n        return _addService.apply(this, arguments);\n      }\n\n      return addService;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      var _this2 = this;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('client').then(function (res) {\n                return _this2.clients = res.data;\n              }).catch(function (err) {\n                return console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["Service.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,OAAA,GAAA;AACA,OAAA,UAAA,MAAA,kBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,oBAFA;AAGA,MAAA,WAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,IAAA,IAAA,EALA;AAMA,MAAA,IAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA;AAPA,KAAA;AASA,GAfA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,MAAA,CAAA,WAAA,IAAA,CAAA,KAAA,QAAA,IAAA,KAAA,QAAA,IAAA,oBAAA,GAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,MAAA,IAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,cAAA,IAAA,CAAA,KAAA,WAAA,GAAA,IAAA,GAAA,KAAA;AACA,KALA;AAOA,IAAA,UAPA;AAAA;AAAA;AAAA,+CAOA,CAPA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,gBAAA,CAAA,CAAA,cAAA;AACA,gBAAA,OATA,GASA;AACA,kBAAA,WAAA,EAAA,EADA;AACA;AACA,kBAAA,SAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,cAAA,EAAA,MAAA,CAAA,KAAA,IAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAHA;AAIA,kBAAA,cAAA,EAAA,KAAA,IAJA;AAKA,kBAAA,YAAA,EAAA,KAAA;AALA,iBATA;;AAAA,sBAiBA,KAAA,MAAA,CAAA,WAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,MAAA,KAAA,KAAA,IAAA,KAAA,MAAA,CAAA,cAAA,KAAA,KAjBA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAkBA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,OAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;AAAA,iBADA,EAEA,KAFA,CAEA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAFA,CAlBA;;AAAA;AAsBA,oBAAA,KAAA,QAAA,CAAA,OAAA,EAAA;AACA,uBAAA,QAAA,GAAA,IAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,MAAA,CAAA,QAAA,GAAA,MAAA,EAAA;AACA,mBAFA,EAEA,IAFA,CAAA;AAGA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAjBA;AAoDA,EAAA,OApDA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAqDA,GAAA,CAAA,GAAA,CAAA,QAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,uBAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA,IAAA;AAAA,eADA,EAEA,KAFA,CAEA,UAAA,GAAA;AAAA,uBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,eAFA,CArDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n    <div id=\"client\">\n       <h3>Cadastrar Serviço</h3>\n\n       <div class=\"client-form\">\n           <form action=\"\" v-on:change=\"checkForm\">\n               \n                <div class=\"form-group\">\n                    <select id=\"inputState\" class=\"form-control\" v-model=\"clientId\">\n                        <option selected>Nome do Cliente...</option>\n                        <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">\n                            {{ client.id }} {{ client.name }}\n                        </option>\n                    </select>\n                </div>\n\n               \n\n                <div class=\"form-group\">\n                     <datepicker bootstrap-styling v-model=\"date\" v-on:change=\"checkForm\"></datepicker> \n                </div>\n                \n                <div class=\"form-group\">\n                    <b-form-timepicker \n                        v-model=\"time\" \n                        locale=\"pt\"\n                        placeholder=\"Escolha a hora...\"\n                        v-on:change=\"checkForm\"\n                    ></b-form-timepicker>\n                </div>\n\n\n               <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"service-type\" placeholder=\"Tipo do Serviço\" v-model=\"serviceType\" v-on:keyup=\"checkForm\">\n                </div>\n\n                <div v-if=\"errors['client-id'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione o nome do cliente<br></span>\n                </div> \n\n                <div v-if=\"errors['time'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione a hora do agendamento<br></span>\n                </div> \n\n                <div v-if=\"errors['service-type'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione o tipo de Serviço<br></span>\n                </div>          \n\n                <button @click=\"addService\" class=\"btn btn-dark\">Cadastrar</button>\n           </form>\n       </div>    \n\n       <sweetalert-icon v-if=\"response\" icon=\"success\" />\n    </div>\n</template>\n\n\n<script>\nimport api from '../services/api'\nimport Datepicker from 'vuejs-datepicker'\nimport moment from 'moment'\n\nexport default {\n    components: {\n        Datepicker,\n    },\n\n    data() {\n        return {\n            clients: [],\n            clientId: 'Nome do Cliente...',\n            serviceType: '',\n            errors: [],\n            date: new Date(),\n            time: '',\n            response: ''\n        }\n    },\n\n    methods: {\n        checkForm() {     \n            this.errors['client-id'] = !this.clientId || this.clientId == 'Nome do Cliente...' ? true : false;\n            this.errors['time'] = !this.time ? true : false; \n            this.errors['service-type'] = !this.serviceType ? true : false;    \n        },\n            \n        async addService(e) {\n            e.preventDefault();\n            const service = {\n                employee_id: 10, //this.employeeId,\n                client_id: this.clientId,\n                scheduled_date: moment(this.date).format('YYYY-MM-DD'),\n                scheduled_hour: this.time,\n                service_type: this.serviceType\n            }\n\n            if(this.errors['client-id'] == false && this.errors['time'] == false && this.errors['service-type'] == false) {\n                await api.post('service', service)\n                .then(res => this.response = res.data)\n                .catch(err => console.log(err));  \n\n                if(this.response.service) {\n                    this.response = true;\n                    setTimeout(() => {\n                        window.location = reload();\n                    }, 2000)\n                }\n            \n\n                \n            }\n       }\n    }, \n    \n    async created() {\n        await api.get('client')\n        .then(res => this.clients = res.data)\n        .catch(err => console.log(err));  \n    }\n}\n</script>\n\n\n<style scoped>\n    *{\n        margin-top: 25px;\n        font-family: 'Roboto300', sans-serif;\n    }\n\n    .client-list {\n        color: #000000;\n        padding: 0;\n        margin: 0;\n        text-align: left;\n        justify-content: left;\n    }\n   \n    .client-form {\n        margin: 20px auto;\n        max-width: 500px;\n        width: 95%;\n        height: 400;\n        padding: 10px;\n        font-family: cursive;\n        border-radius: 15px;\n        cursor: pointer;\n\n    }\n\n</style>"],"sourceRoot":"src/views"}]}