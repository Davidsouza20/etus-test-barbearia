{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js!/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/views/EmployeeLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/views/EmployeeLogin.vue","mtime":1592505363912},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/Documents/barberShopFront/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"../services/api\";\nexport default {\n  data: function data() {\n    return {\n      name: '',\n      email: '',\n      phone: '',\n      errors: [],\n      response: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    checkForm: function checkForm() {\n      this.errors['email'] = !this.email || !this.validEmail(this.email) ? true : false;\n    },\n    validEmail: function validEmail(email) {\n      var isValid = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return isValid.test(email);\n    },\n    login: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(e) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //reset error message\n                this.errorMessage = '';\n                e.preventDefault();\n\n                if (!(this.errors['email'] == false)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return api.get(\"employee/\".concat(this.email)).then(function (res) {\n                  return _this.response = res.data;\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 5:\n                if (this.response == 'Profissional não cadastrado') {\n                  this.errorMessage = this.response;\n                } else {\n                  localStorage.setItem('employee_id', this.response.id);\n                  localStorage.setItem('employee_email', this.response.email);\n                  localStorage.setItem('employee_name', this.response.name);\n                  this.response = 'success';\n                  setTimeout(function () {\n                    window.location.href = '/relatorio';\n                  }, 500);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }\n};",{"version":3,"sources":["EmployeeLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,GAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,QAAA,EAAA,EALA;AAMA,MAAA,YAAA,EAAA;AANA,KAAA;AAQA,GAVA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,WAAA,MAAA,CAAA,OAAA,IAAA,CAAA,KAAA,KAAA,IAAA,CAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA,GAAA,IAAA,GAAA,KAAA;AACA,KAHA;AAKA,IAAA,UAAA,EAAA,oBAAA,KAAA,EAAA;AACA,UAAA,OAAA,GAAA,yJAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA;AACA,KARA;AAUA,IAAA,KAVA;AAAA;AAAA;AAAA,+CAUA,CAVA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWA;AACA,qBAAA,YAAA,GAAA,EAAA;AACA,gBAAA,CAAA,CAAA,cAAA;;AAbA,sBAeA,KAAA,MAAA,CAAA,OAAA,KAAA,KAfA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgBA,GAAA,CAAA,GAAA,oBAAA,KAAA,KAAA,GACA,IADA,CACA,UAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;AAAA,iBADA,EAEA,KAFA,CAEA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAFA,CAhBA;;AAAA;AAoBA,oBAAA,KAAA,QAAA,IAAA,6BAAA,EAAA;AACA,uBAAA,YAAA,GAAA,KAAA,QAAA;AACA,iBAFA,MAEA;AACA,kBAAA,YAAA,CAAA,OAAA,CAAA,aAAA,EAAA,KAAA,QAAA,CAAA,EAAA;AACA,kBAAA,YAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,KAAA,QAAA,CAAA,KAAA;AACA,kBAAA,YAAA,CAAA,OAAA,CAAA,eAAA,EAAA,KAAA,QAAA,CAAA,IAAA;AAEA,uBAAA,QAAA,GAAA,SAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,YAAA;AACA,mBAFA,EAEA,GAFA,CAAA;AAGA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAZA,CAAA","sourcesContent":["<template>\n    <div id=\"employee\">\n       <h3>Login do Profissional</h3>\n\n       <div class=\"client-form\">\n           <form action=\"\">\n               <div class=\"form-group\">\n                    <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"E-mail do Cliente\" v-model=\"email\" v-on:keyup=\"checkForm\">\n                </div>\n\n                <div v-if=\"errors['email'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Email inválido<br></span>\n                </div> \n\n                <button @click=\"login\" class=\"btn btn-dark\">Entrar</button>\n           </form>\n           <br>\n            <span v-if=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}<br></span>\n       </div>\n       <sweetalert-icon v-if=\"response == 'success'\" icon=\"success\" />   \n    </div>\n</template>\n\n\n<script>\nimport api from '../services/api'\nexport default {\n    data() {\n        return {\n            name: '',\n            email: '',\n            phone: '',\n            errors: [],\n            response: '',\n            errorMessage: ''\n        }\n    },\n\n    methods: {\n        checkForm() {     \n            this.errors['email'] = !this.email || !this.validEmail(this.email) ? true : false;\n        },\n\n        validEmail: (email) => {\n            let isValid = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return isValid.test(email);\n        },\n\n        async login(e) {\n            //reset error message\n            this.errorMessage = '';\n            e.preventDefault();\n        \n            if(this.errors['email'] == false) {\n                await api.get(`employee/${this.email}`)\n                .then(res => this.response = res.data)\n                .catch(err => console.log(err));  \n\n                if(this.response == 'Profissional não cadastrado') {\n                    this.errorMessage = this.response;       \n                } else {\n                    localStorage.setItem('employee_id', this.response.id);\n                    localStorage.setItem('employee_email', this.response.email);\n                    localStorage.setItem('employee_name', this.response.name);\n\n                    this.response = 'success';\n                    setTimeout(() => {\n                    window.location.href = '/relatorio';\n                    }, 500)    \n                } \n            }\n       }\n    }   \n}\n</script>\n\n\n<style scoped>\n    *{\n        margin-top: 25px;\n        font-family: 'Roboto300', sans-serif;\n    }\n\n    #employee {\n        height: 1500px;\n        height: 100%;\n        padding: 0;\n        margin: 0;\n        display: -webkit-box;\n        display: -moz-box;\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n   \n    .client-form {\n        margin: 20px auto;\n        max-width: 500px;\n        width: 95%;\n        height: 400;\n        color: #ffff;\n        padding: 10px;\n        font-family: cursive;\n        border-radius: 15px;\n        cursor: pointer;\n\n    }\n\n</style>"],"sourceRoot":"src/views"}]}