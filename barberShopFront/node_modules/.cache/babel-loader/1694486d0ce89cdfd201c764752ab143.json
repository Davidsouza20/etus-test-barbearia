{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js!/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/components/PasswordCreate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/components/PasswordCreate.vue","mtime":1591997511169},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/home/david/Documents/barberShopFront/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/david/Documents/barberShopFront/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport api from \"../services/api\";\nexport default {\n  data: function data() {\n    return {\n      fullPage: true,\n      isLoading: false,\n      email: this.$route.query.email,\n      password: \"\",\n      confirmPassword: \"\",\n      response: \"\",\n      error: false,\n      errorMessage: \"\",\n      token: this.$route.query.token\n    };\n  },\n  methods: {\n    register: function () {\n      var _register = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var payload, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.password == '' || this.confirmPassword == '') {\n                  this.error = true;\n                } else {\n                  this.error = false;\n                }\n\n                if (this.password !== this.confirmPassword) {\n                  this.errorMessage = {\n                    error: 'As senhas são diferentes.'\n                  };\n                } else if (this.password == this.confirmPassword) {\n                  this.errorMessage = '';\n                }\n\n                payload = {\n                  email: this.email,\n                  password: this.password,\n                  token: this.token\n                };\n                data = Object.entries(payload).map(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      key = _ref2[0],\n                      val = _ref2[1];\n\n                  return \"\".concat(key, \"=\").concat(encodeURIComponent(val));\n                }).join(\"&\");\n                console.log(data);\n\n                if (!(!this.errorMessage.error && !this.error)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 8;\n                return api.post('/reset-password', data).then(function (res) {\n                  return _this.response = res.data;\n                }).catch(function (err) {\n                  return console.log(err);\n                });\n\n              case 8:\n                if (this.response == true) {\n                  window.location.href = \"/\";\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function register() {\n        return _register.apply(this, arguments);\n      }\n\n      return register;\n    }(),\n    validate: function validate() {}\n  }\n};",{"version":3,"sources":["PasswordCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,GAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAHA;AAIA,MAAA,QAAA,EAAA,EAJA;AAKA,MAAA,eAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA,EANA;AAOA,MAAA,KAAA,EAAA,KAPA;AAQA,MAAA,YAAA,EAAA,EARA;AASA,MAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,oBAAA,KAAA,QAAA,IAAA,EAAA,IAAA,KAAA,eAAA,IAAA,EAAA,EAAA;AACA,uBAAA,KAAA,GAAA,IAAA;AACA,iBAFA,MAEA;AACA,uBAAA,KAAA,GAAA,KAAA;AACA;;AACA,oBAAA,KAAA,QAAA,KAAA,KAAA,eAAA,EAAA;AACA,uBAAA,YAAA,GAAA;AACA,oBAAA,KAAA,EAAA;AADA,mBAAA;AAGA,iBAJA,MAIA,IAAA,KAAA,QAAA,IAAA,KAAA,eAAA,EAAA;AACA,uBAAA,YAAA,GAAA,EAAA;AACA;;AAEA,gBAAA,OAfA,GAeA;AACA,kBAAA,KAAA,EAAA,KAAA,KADA;AAEA,kBAAA,QAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,KAAA,EAAA,KAAA;AAHA,iBAfA;AAsBA,gBAAA,IAtBA,GAsBA,MAAA,CAAA,OAAA,CAAA,OAAA,EACA,GADA,CACA;AAAA;AAAA,sBAAA,GAAA;AAAA,sBAAA,GAAA;;AAAA,mCAAA,GAAA,cAAA,kBAAA,CAAA,GAAA,CAAA;AAAA,iBADA,EAEA,IAFA,CAEA,GAFA,CAtBA;AA0BA,gBAAA,OAAA,CAAA,GAAA,CAAA,IAAA;;AA1BA,sBA2BA,CAAA,KAAA,YAAA,CAAA,KAAA,IAAA,CAAA,KAAA,KA3BA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA4BA,GAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,IAAA,EACA,IADA,CACA,UAAA,GAAA;AAAA,yBAAA,KAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA;AAAA,iBADA,EAEA,KAFA,CAEA,UAAA,GAAA;AAAA,yBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA,iBAFA,CA5BA;;AAAA;AAiCA,oBAAA,KAAA,QAAA,IAAA,IAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,GAAA;AACA;;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0CA,IAAA,QA1CA,sBA0CA,CAEA;AA5CA;AAdA,CAAA","sourcesContent":["<template>\n    <div id=\"login\">\n        <h1>Cadastre sua Senha</h1>\n        <h4 class=\"modal-title w-100 font-weight-bold \"><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></h4>\n        <div class=\"form-group\">\n            <input type=\"password\" required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Senha\" v-model=\"password\">\n            \n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" required class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Repita a Senha\" v-model=\"confirmPassword\">\n        </div>\n        \n        <div v-if=\"errorMessage.error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ errorMessage.error }}\n        </div>\n        <div v-else-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            Crie uma Senha\n        </div>\n        <div v-if=\"response\" class=\"alert alert-success\" role=\"alert\">\n            Parabéns senha cadastrada com sucesso\n        </div>\n\n        <button type=\"submit\" class=\"btn green\" @click=\"register\">Cadastrar</button>\n\n\n\n    </div>\n</template>\n\n<script>\nimport api from '../services/api'\n\nexport default {\n    data() {\n        return {\n            fullPage: true,\n            isLoading: false,\n            email: this.$route.query.email,\n            password: \"\",\n            confirmPassword: \"\",\n            response: \"\",\n            error: false,\n            errorMessage: \"\",\n            token: this.$route.query.token\n        }\n    },\n    methods: {\n        async register () {\n            if(this.password == '' || this.confirmPassword == '') {\n                this.error = true;\n            } else {\n                this.error = false;\n            }\n            if (this.password !== this.confirmPassword) {\n                this.errorMessage = {\n                    error: 'As senhas são diferentes.'\n                }\n            } else if (this.password == this.confirmPassword) {\n                this.errorMessage = '';\n            } \n\n            const payload = {\n                email: this.email,\n                password: this.password,\n                token: this.token\n            }\n            \n\n            const data = Object.entries(payload)\n                .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\n                .join(\"&\");\n\n            console.log(data);\n            if (!this.errorMessage.error && !this.error) {\n                await api.post('/reset-password', data)\n                    .then(res =>  (this.response = res.data))\n                    .catch(err => console.log(err));  \n            }\n            \n            if (this.response == true) {\n                window.location.href = \"/\";  \n            }\n\n\n\n\n        },\n\n        validate () {\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n     #login {\n        max-width: 500px;\n        border: 1px solid #CCCCCC;\n        background-color: #FFFFFF;\n        margin: auto;\n        margin-top: 30px;\n        padding: 20px;\n    }\n    \n    .green {\n        background-color: #38ef7d;\n        color: #ffffff;\n        font-weight: bold;\n    }\n</style>"],"sourceRoot":"src/components"}]}