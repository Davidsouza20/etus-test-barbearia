{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/components/PasswordCreate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/components/PasswordCreate.vue","mtime":1591997511169},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '../services/api'\n\nexport default {\n    data() {\n        return {\n            fullPage: true,\n            isLoading: false,\n            email: this.$route.query.email,\n            password: \"\",\n            confirmPassword: \"\",\n            response: \"\",\n            error: false,\n            errorMessage: \"\",\n            token: this.$route.query.token\n        }\n    },\n    methods: {\n        async register () {\n            if(this.password == '' || this.confirmPassword == '') {\n                this.error = true;\n            } else {\n                this.error = false;\n            }\n            if (this.password !== this.confirmPassword) {\n                this.errorMessage = {\n                    error: 'As senhas são diferentes.'\n                }\n            } else if (this.password == this.confirmPassword) {\n                this.errorMessage = '';\n            } \n\n            const payload = {\n                email: this.email,\n                password: this.password,\n                token: this.token\n            }\n            \n\n            const data = Object.entries(payload)\n                .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\n                .join(\"&\");\n\n            console.log(data);\n            if (!this.errorMessage.error && !this.error) {\n                await api.post('/reset-password', data)\n                    .then(res =>  (this.response = res.data))\n                    .catch(err => console.log(err));  \n            }\n            \n            if (this.response == true) {\n                window.location.href = \"/\";  \n            }\n\n\n\n\n        },\n\n        validate () {\n\n        }\n    }\n}\n",{"version":3,"sources":["PasswordCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;;AAEA;;AAEA;AACA;AACA","file":"PasswordCreate.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"login\">\n        <h1>Cadastre sua Senha</h1>\n        <h4 class=\"modal-title w-100 font-weight-bold \"><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></h4>\n        <div class=\"form-group\">\n            <input type=\"password\" required class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Senha\" v-model=\"password\">\n            \n        </div>\n        <div class=\"form-group\">\n            <input type=\"password\" required class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Repita a Senha\" v-model=\"confirmPassword\">\n        </div>\n        \n        <div v-if=\"errorMessage.error\" class=\"alert alert-danger\" role=\"alert\">\n            {{ errorMessage.error }}\n        </div>\n        <div v-else-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n            Crie uma Senha\n        </div>\n        <div v-if=\"response\" class=\"alert alert-success\" role=\"alert\">\n            Parabéns senha cadastrada com sucesso\n        </div>\n\n        <button type=\"submit\" class=\"btn green\" @click=\"register\">Cadastrar</button>\n\n\n\n    </div>\n</template>\n\n<script>\nimport api from '../services/api'\n\nexport default {\n    data() {\n        return {\n            fullPage: true,\n            isLoading: false,\n            email: this.$route.query.email,\n            password: \"\",\n            confirmPassword: \"\",\n            response: \"\",\n            error: false,\n            errorMessage: \"\",\n            token: this.$route.query.token\n        }\n    },\n    methods: {\n        async register () {\n            if(this.password == '' || this.confirmPassword == '') {\n                this.error = true;\n            } else {\n                this.error = false;\n            }\n            if (this.password !== this.confirmPassword) {\n                this.errorMessage = {\n                    error: 'As senhas são diferentes.'\n                }\n            } else if (this.password == this.confirmPassword) {\n                this.errorMessage = '';\n            } \n\n            const payload = {\n                email: this.email,\n                password: this.password,\n                token: this.token\n            }\n            \n\n            const data = Object.entries(payload)\n                .map(([key, val]) => `${key}=${encodeURIComponent(val)}`)\n                .join(\"&\");\n\n            console.log(data);\n            if (!this.errorMessage.error && !this.error) {\n                await api.post('/reset-password', data)\n                    .then(res =>  (this.response = res.data))\n                    .catch(err => console.log(err));  \n            }\n            \n            if (this.response == true) {\n                window.location.href = \"/\";  \n            }\n\n\n\n\n        },\n\n        validate () {\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n     #login {\n        max-width: 500px;\n        border: 1px solid #CCCCCC;\n        background-color: #FFFFFF;\n        margin: auto;\n        margin-top: 30px;\n        padding: 20px;\n    }\n    \n    .green {\n        background-color: #38ef7d;\n        color: #ffffff;\n        font-weight: bold;\n    }\n</style>"]}]}