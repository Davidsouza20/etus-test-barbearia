{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/views/Service.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/views/Service.vue","mtime":1592506491721},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport api from '../services/api'\nimport Datepicker from 'vuejs-datepicker'\nimport moment from 'moment'\n\nexport default {\n    components: {\n        Datepicker,\n    },\n\n    data() {\n        return {\n            clients: [],\n            clientId: 'Nome do Cliente...',\n            serviceType: '',\n            errors: [],\n            date: new Date(),\n            time: '',\n            response: ''\n        }\n    },\n\n    methods: {\n        checkForm() {     \n            this.errors['client-id'] = !this.clientId || this.clientId == 'Nome do Cliente...' ? true : false;\n            this.errors['time'] = !this.time ? true : false; \n            this.errors['service-type'] = !this.serviceType ? true : false;    \n        },\n            \n        async addService(e) {\n            e.preventDefault();\n            const service = {\n                employee_id: 10, //this.employeeId,\n                client_id: this.clientId,\n                scheduled_date: moment(this.date).format('YYYY-MM-DD'),\n                scheduled_hour: this.time,\n                service_type: this.serviceType\n            }\n\n            if(this.errors['client-id'] == false && this.errors['time'] == false && this.errors['service-type'] == false) {\n                await api.post('service', service)\n                .then(res => this.response = res.data)\n                .catch(err => console.log(err));  \n\n                if(this.response.service) {\n                    this.response = true;\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 2000)\n                }\n            \n\n                \n            }\n       }\n    }, \n    \n    async created() {\n        await api.get('client')\n        .then(res => this.clients = res.data)\n        .catch(err => console.log(err));  \n    }\n}\n",{"version":3,"sources":["Service.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Service.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"service\">\n       <h3>Cadastrar Serviço</h3>\n\n       <div class=\"client-form\">\n           <form action=\"\" v-on:change=\"checkForm\">\n               \n                <div class=\"form-group\">\n                    <select id=\"inputState\" class=\"form-control\" v-model=\"clientId\">\n                        <option selected>Nome do Cliente...</option>\n                        <option v-for=\"client in clients\" :key=\"client.id\" :value=\"client.id\">\n                            {{ client.id }} {{ client.name }}\n                        </option>\n                    </select>\n                </div>\n\n               \n\n                <div class=\"form-group\">\n                     <datepicker bootstrap-styling v-model=\"date\" v-on:change=\"checkForm\"></datepicker> \n                </div>\n                \n                <div class=\"form-group\">\n                    <b-form-timepicker \n                        v-model=\"time\" \n                        locale=\"pt\"\n                        placeholder=\"Escolha a hora...\"\n                        v-on:change=\"checkForm\"\n                    ></b-form-timepicker>\n                </div>\n\n\n               <div class=\"form-group\">\n                    <input type=\"text\" class=\"form-control\" name=\"service-type\" placeholder=\"Tipo do Serviço\" v-model=\"serviceType\" v-on:keyup=\"checkForm\">\n                </div>\n\n                <div v-if=\"errors['client-id'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione o nome do cliente<br></span>\n                </div> \n\n                <div v-if=\"errors['time'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione a hora do agendamento<br></span>\n                </div> \n\n                <div v-if=\"errors['service-type'] == true\" class=\"alert alert-danger\" role=\"alert\">\n                    <span>Selecione o tipo de Serviço<br></span>\n                </div>          \n\n                <button @click=\"addService\" class=\"btn btn-dark\">Cadastrar</button>\n           </form>\n       </div>    \n\n       <sweetalert-icon v-if=\"response\" icon=\"success\" />\n    </div>\n</template>\n\n\n<script>\nimport api from '../services/api'\nimport Datepicker from 'vuejs-datepicker'\nimport moment from 'moment'\n\nexport default {\n    components: {\n        Datepicker,\n    },\n\n    data() {\n        return {\n            clients: [],\n            clientId: 'Nome do Cliente...',\n            serviceType: '',\n            errors: [],\n            date: new Date(),\n            time: '',\n            response: ''\n        }\n    },\n\n    methods: {\n        checkForm() {     \n            this.errors['client-id'] = !this.clientId || this.clientId == 'Nome do Cliente...' ? true : false;\n            this.errors['time'] = !this.time ? true : false; \n            this.errors['service-type'] = !this.serviceType ? true : false;    \n        },\n            \n        async addService(e) {\n            e.preventDefault();\n            const service = {\n                employee_id: 10, //this.employeeId,\n                client_id: this.clientId,\n                scheduled_date: moment(this.date).format('YYYY-MM-DD'),\n                scheduled_hour: this.time,\n                service_type: this.serviceType\n            }\n\n            if(this.errors['client-id'] == false && this.errors['time'] == false && this.errors['service-type'] == false) {\n                await api.post('service', service)\n                .then(res => this.response = res.data)\n                .catch(err => console.log(err));  \n\n                if(this.response.service) {\n                    this.response = true;\n                    setTimeout(() => {\n                        window.location.reload();\n                    }, 2000)\n                }\n            \n\n                \n            }\n       }\n    }, \n    \n    async created() {\n        await api.get('client')\n        .then(res => this.clients = res.data)\n        .catch(err => console.log(err));  \n    }\n}\n</script>\n\n\n<style scoped>\n    *{\n        margin-top: 25px;\n        font-family: 'Roboto300', sans-serif;\n    }\n\n    #service {\n        margin: 150px auto;\n    }\n\n    .client-list {\n        color: #000000;\n        padding: 0;\n        margin: 0;\n        text-align: left;\n        justify-content: left;\n    }\n   \n    .client-form {\n        margin: 20px auto;\n        max-width: 500px;\n        width: 95%;\n        height: 400;\n        padding: 10px;\n        font-family: cursive;\n        border-radius: 15px;\n        cursor: pointer;\n\n    }\n\n</style>"]}]}