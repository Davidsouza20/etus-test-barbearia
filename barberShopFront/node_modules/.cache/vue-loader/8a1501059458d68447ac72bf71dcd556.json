{"remainingRequest":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/david/Documents/barberShopFront/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/david/Documents/barberShopFront/src/components/Chat.vue","mtime":1591997511169},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/david/Documents/barberShopFront/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport io from \"socket.io-client\";\nlet socket = io.connect(\"https://hellen-fitness-api.herokuapp.com\");\n\nexport default {\n    data()  {\n        return {\n            username: '',\n            message: '',\n            messages: [],\n        }\n    },\n               \n            \n    methods: {\n        send(e) {\n            e.preventDefault();\n            socket.emit('chat-message', { \n                message: this.message, \n                user: this.username })\n            \n            this.messages.push({ message: this.message, by: this.username });\n            this.message = null\n        },\n\n        clearChat() {\n            socket.emit('clear-chat');\n        }\n    },\n\n    created() {\n        this.username = localStorage.getItem('username');\n\n        socket.on('previous-message', (messages) => {\n            for (const message of messages) {\n                 this.messages.push({ message: message.message, by: message.user })\n            }\n        })\n\n        socket.on('chat-message', (data) => {\n            this.messages.push({ message: data.message, by: data.user })\n            this.typing = false\n        });\n\n        \n\n        // socket.on('previous-message', (data) => {\n        //     this.messages.push(data);\n        // })\n    }\n}\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"messages\" >\n            <div class=\"message\" v-for=\"message of messages\" :key=\"message.id\">\n                <strong>{{ message.by + ': ' }}</strong> {{ message.message }}\n            </div>   \n        </div>\n        <form id=\"chat\" >\n            <input type=\"hidden\" name=\"username\" v-model=\"username\">\n            <input type=\"text\" name=\"message\" placeholder=\"Digite sua mensagem\" v-model=\"message\" autocomplete=\"off\">\n            <button type=\"submit\" @click=\"send\">Enviar</button>\n        </form>     \n        <br>\n        <span class=\"btn btn-danger\" v-if=\"username == 'Hellen Fitness'\" @click=\"clearChat\">Limpar chat</span>\n    </div>\n</template>\n\n<script>\nimport io from \"socket.io-client\";\nlet socket = io.connect(\"https://hellen-fitness-api.herokuapp.com\");\n\nexport default {\n    data()  {\n        return {\n            username: '',\n            message: '',\n            messages: [],\n        }\n    },\n               \n            \n    methods: {\n        send(e) {\n            e.preventDefault();\n            socket.emit('chat-message', { \n                message: this.message, \n                user: this.username })\n            \n            this.messages.push({ message: this.message, by: this.username });\n            this.message = null\n        },\n\n        clearChat() {\n            socket.emit('clear-chat');\n        }\n    },\n\n    created() {\n        this.username = localStorage.getItem('username');\n\n        socket.on('previous-message', (messages) => {\n            for (const message of messages) {\n                 this.messages.push({ message: message.message, by: message.user })\n            }\n        })\n\n        socket.on('chat-message', (data) => {\n            this.messages.push({ message: data.message, by: data.user })\n            this.typing = false\n        });\n\n        \n\n        // socket.on('previous-message', (data) => {\n        //     this.messages.push(data);\n        // })\n    }\n}\n</script>\n\n<style scoped>\n.message { \n    padding: 5px;\n    text-align: left;\n}\n\n\nhtml, body {\n  height: 100%;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#chat {\n  height: 100%;\n  display: flex;\n  justify-content: left;\n  align-items: center;\n  flex-direction: column;\n}\n\ninput {\n  width: 600px;\n  border: 1px solid #ddd;\n  height: 50px;\n  padding: 0 20px;\n  font-size: 14px;\n}\n\nbutton {\n  width: 600px;\n  height: 50px;\n  font-size: 14px;\n  background: #069;\n  text-align: center;\n  line-height: 50px;\n  font-weight: bold;\n  color: #FFF;\n  margin-top: 10px;\n}\n\n.messages {\n  width: 600px;\n  height: 250px;\n  margin: 20px auto;\n  border: 1px solid #ddd;\n  padding: 20px;\n  overflow: scroll;\n  overflow-x: hidden;\n}\n</style>"]}]}